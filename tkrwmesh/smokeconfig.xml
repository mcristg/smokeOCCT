<config>
    <moduleName>tkrwmesh</moduleName>
    <parentModules>
        <module>tkde</module>
        <module>tkxcaf</module>
    </parentModules>
    <parts>1</parts>
    <scalarTypes>
        <!-- QString is a class, but represented as a scalar (#) in munged names -->
        <typeName>QString</typeName>
    </scalarTypes>
    <voidpTypes>
        <!-- both are classes, but they are represented as Smoke::t_voidp -->
        <typeName>QStringList</typeName>
        <typeName>QString</typeName>
    </voidpTypes>
    <functions>
        <!-- <name>^IBPMatrix.*</name> -->
    </functions>
    <exclude>
        <!-- is protected within this context -->
        <signature>.*RWGltf_CafWriter::RWGltf_StyledShape.*</signature>
        <signature>.*RWObj_Reader::ObjVec3iHasher::RWGltf_StyledShape.*</signature>
        <signature>.*RWObj_Reader::VectorOfVertices.*</signature>
        <signature>.*RWObj_Reader::ObjVec3iHasher.*</signature>
        <!-- is implicitly deleted because the default definition would be ill-formed -->
        <signature>.*RWGltf_GltfOStreamWriter\(const RWGltf_GltfOStreamWriter.*&amp;.*\)</signature>
        <signature>.*RWGltf_TriangulationReader\(const RWGltf_TriangulationReader.*&amp;.*\)</signature>
        <signature>.*RWMesh_TriangulationReader\(const RWMesh_TriangulationReader.*&amp;.*\)</signature>
        <!-- ‘Standard_Mutex& Standard_Mutex::operator=(const Standard_Mutex&)’ is private within this context -->
        <!--<signature>.*myMutex.*</signature>--> <!-- Use std::memcpy instead of operator= -->
        <!-- OS X internal stuff -->
        <signature>.*qt_mac_set_cursor.*</signature>
    </exclude>
    <classList>
        <class>RWMesh</class>
        <class>RWMesh_CafReader</class>
        <class>RWMesh_CoordinateSystem</class>
        <class>RWMesh_CoordinateSystemConverter</class>
        <class>RWMesh_FaceIterator</class>
        <class>RWMesh_MaterialMap</class>
        <class>RWMesh_NameFormat</class>
        <class>RWMesh_NodeAttributes</class>
        <class>RWMesh_TriangulationReader</class>
        <class>RWMesh_TriangulationSource</class>
    </classList>
    <!-- Use std::memcpy instead of operator= -->
    <!-- <doubleCondition>className|field.toString()</doubleCondition> -->
    <doubleConditions>
        <doubleCondition>RWMesh_TriangulationReader|Standard_Mutex myMutex</doubleCondition>
    </doubleConditions>
</config>
